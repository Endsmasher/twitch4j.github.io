"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2761],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),c=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,h=m["".concat(o,".").concat(d)]||m[d]||p[d]||s;return r?n.createElement(h,l(l({ref:t},u),{},{components:r})):n.createElement(h,l({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,l=new Array(s);l[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<s;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5162:(e,t,r)=>{r.r(t),r.d(t,{default:()=>l});var n=r(7294),a=r(6010);const s="tabItem_Ymn6";function l(e){let{children:t,hidden:r,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(s,l),hidden:r},t)}},5488:(e,t,r)=>{r.r(t),r.d(t,{default:()=>d});var n=r(7462),a=r(7294),s=r(6010),l=r(2389),i=r(7392),o=r(7094),c=r(2466);const u="tabList__CuJ",p="tabItem_LNqP";function m(e){var t,r;const{lazy:l,block:m,defaultValue:d,values:h,groupId:f,className:v}=e,b=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=h?h:b.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),y=(0,i.l)(g,((e,t)=>e.value===t.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===d?d:null!=(t=null!=d?d:null==(r=b.find((e=>e.props.default)))?void 0:r.props.value)?t:b[0].props.value;if(null!==k&&!g.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+g.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:w,setTabGroupChoices:N}=(0,o.U)(),[T,x]=(0,a.useState)(k),O=[],{blockElementScrollPositionUntilNextRender:S}=(0,c.o5)();if(null!=f){const e=w[f];null!=e&&e!==T&&g.some((t=>t.value===e))&&x(e)}const C=e=>{const t=e.currentTarget,r=O.indexOf(t),n=g[r].value;n!==T&&(S(t),x(n),null!=f&&N(f,String(n)))},E=e=>{var t;let r=null;switch(e.key){case"Enter":C(e);break;case"ArrowRight":{var n;const t=O.indexOf(e.currentTarget)+1;r=null!=(n=O[t])?n:O[0];break}case"ArrowLeft":{var a;const t=O.indexOf(e.currentTarget)-1;r=null!=(a=O[t])?a:O[O.length-1];break}}null==(t=r)||t.focus()};return a.createElement("div",{className:(0,s.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":m},v)},g.map((e=>{let{value:t,label:r,attributes:l}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>O.push(e),onKeyDown:E,onClick:C},l,{className:(0,s.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":T===t})}),null!=r?r:t)}))),l?(0,a.cloneElement)(b.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function d(e){const t=(0,l.Z)();return a.createElement(m,(0,n.Z)({key:String(t)},e))}},8252:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var n=r(7462),a=(r(7294),r(3905)),s=r(5488),l=r(5162);const i={sidebar_position:10},o="Get Chatters",c={unversionedId:"rest-tmi/get-chatters",id:"version-1.x/rest-tmi/get-chatters",title:"Get Chatters",description:"Description",source:"@site/versioned_docs/version-1.x/rest-tmi/get-chatters.mdx",sourceDirName:"rest-tmi",slug:"/rest-tmi/get-chatters",permalink:"/rest-tmi/get-chatters",draft:!1,editUrl:"https://github.com/twitch4j/twitch4j.github.io/tree/master/docs/versioned_docs/version-1.x/rest-tmi/get-chatters.mdx",tags:[],version:"1.x",lastUpdatedBy:"Philipp Heuer",lastUpdatedAt:1660511578,formattedLastUpdatedAt:"Aug 14, 2022",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"version-1.x-docs",previous:{title:"API - Messaging Interface",permalink:"/rest-tmi/"},next:{title:"Get Hosts",permalink:"/rest-tmi/get-hosts"}},u={},p=[{value:"Description",id:"description",level:2},{value:"Method Definition",id:"method-definition",level:2},{value:"Code-Snippets",id:"code-snippets",level:2},{value:"print current viewers (chatters)",id:"print-current-viewers-chatters",level:3}],m={toc:p};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"get-chatters"},"Get Chatters"),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"Gets vip's, moderators, staff, admins and normal viewers that are currently present in the chat. (Viewers that use a embedded viewer without chat can't be tracked using this)"),(0,a.kt)("p",null,"There is no other way to request information about current viewers, as such this is currently the only way to get a list of people watching a stream."),(0,a.kt)("h2",{id:"method-definition"},"Method Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@RequestLine("GET /group/user/{channel}/chatters")\nHystrixCommand<Chatters> getChatters(\n    @Param("channel") String channelName\n);\n')),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Required Parameters")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"right"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"channelName"),(0,a.kt)("td",{parentName:"tr",align:"center"},"text"),(0,a.kt)("td",{parentName:"tr",align:"right"},"Target Channel Name")))),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Optional Parameters")),(0,a.kt)("p",null,"None"),(0,a.kt)("h2",{id:"code-snippets"},"Code-Snippets"),(0,a.kt)("h3",{id:"print-current-viewers-chatters"},"print current viewers (chatters)"),(0,a.kt)(s.default,{groupId:"code",mdxType:"Tabs"},(0,a.kt)(l.default,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'Chatters chatters = twitchClient.getMessagingInterface().getChatters("lirik").execute();\n\nSystem.out.println("Broadcaster: " + chatters.getBroadcaster());\nSystem.out.println("VIPs: " + chatters.getVips());\nSystem.out.println("Mods: " + chatters.getModerators());\nSystem.out.println("Admins: " + chatters.getAdmins());\nSystem.out.println("Staff: " + chatters.getStaff());\nSystem.out.println("Viewers: " + chatters.getViewers());\nSystem.out.println("All Viewers (sum of the above): " + chatters.getAllViewers());\n'))),(0,a.kt)(l.default,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'val chatters = twitchClient.messagingInterface.getChatters("lirik").execute();\n\nprintln("Broadcaster: ${chatters.broadcaster}");\nprintln("VIPs: ${chatters.vips}");\nprintln("Mods: ${chatters.moderators}");\nprintln("Admins: ${chatters.admins}");\nprintln("Staff: ${chatters.staff}");\nprintln("Viewers: ${chatters.viewers}");\nprintln("All Viewers (sum of the above): ${chatters.allViewers}");\n'))),(0,a.kt)(l.default,{value:"groovy",label:"Groovy",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-groovy"},'def chatters = twitchClient.messagingInterface.getChatters("lirik").execute();\n\nSystem.out.println("Broadcaster: ${chatters.broadcaster}");\nSystem.out.println("VIPs: ${chatters.vips}");\nSystem.out.println("Mods: ${chatters.moderators}");\nSystem.out.println("Admins: ${chatters.admins}");\nSystem.out.println("Staff: ${chatters.staff}");\nSystem.out.println("Viewers: ${chatters.viewers}");\nSystem.out.println("All Viewers (sum of the above): ${chatters.allViewers}");\n')))))}d.isMDXComponent=!0}}]);