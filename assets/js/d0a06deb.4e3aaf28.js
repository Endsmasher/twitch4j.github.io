"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4597],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),u=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(r),m=a,b=d["".concat(o,".").concat(m)]||d[m]||p[m]||l;return r?n.createElement(b,s(s({ref:t},c),{},{components:r})):n.createElement(b,s({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,s=new Array(l);s[0]=d;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var u=2;u<l;u++)s[u]=r[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5162:(e,t,r)=>{r.r(t),r.d(t,{default:()=>s});var n=r(7294),a=r(6010);const l="tabItem_Ymn6";function s(e){let{children:t,hidden:r,className:s}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(l,s),hidden:r},t)}},5488:(e,t,r)=>{r.r(t),r.d(t,{default:()=>m});var n=r(7462),a=r(7294),l=r(6010),s=r(2389),i=r(7392),o=r(7094),u=r(2466);const c="tabList__CuJ",p="tabItem_LNqP";function d(e){var t,r;const{lazy:s,block:d,defaultValue:m,values:b,groupId:h,className:f}=e,g=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=b?b:g.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),y=(0,i.l)(v,((e,t)=>e.value===t.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===m?m:null!=(t=null!=m?m:null==(r=g.find((e=>e.props.default)))?void 0:r.props.value)?t:g[0].props.value;if(null!==k&&!v.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+v.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:N,setTabGroupChoices:x}=(0,o.U)(),[w,T]=(0,a.useState)(k),O=[],{blockElementScrollPositionUntilNextRender:E}=(0,u.o5)();if(null!=h){const e=N[h];null!=e&&e!==w&&v.some((t=>t.value===e))&&T(e)}const j=e=>{const t=e.currentTarget,r=O.indexOf(t),n=v[r].value;n!==w&&(E(t),T(n),null!=h&&x(h,String(n)))},L=e=>{var t;let r=null;switch(e.key){case"Enter":j(e);break;case"ArrowRight":{var n;const t=O.indexOf(e.currentTarget)+1;r=null!=(n=O[t])?n:O[0];break}case"ArrowLeft":{var a;const t=O.indexOf(e.currentTarget)-1;r=null!=(a=O[t])?a:O[O.length-1];break}}null==(t=r)||t.focus()};return a.createElement("div",{className:(0,l.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":d},f)},v.map((e=>{let{value:t,label:r,attributes:s}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>O.push(e),onKeyDown:L,onClick:j},s,{className:(0,l.Z)("tabs__item",p,null==s?void 0:s.className,{"tabs__item--active":w===t})}),null!=r?r:t)}))),s?(0,a.cloneElement)(g.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function m(e){const t=(0,s.Z)();return a.createElement(d,(0,n.Z)({key:String(t)},e))}},47:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>p});var n=r(7462),a=(r(7294),r(3905)),l=r(5488),s=r(5162);const i={sidebar_position:60},o="Users - Get",u={unversionedId:"rest-helix/users-get",id:"version-1.x/rest-helix/users-get",title:"Users - Get",description:"Description",source:"@site/versioned_docs/version-1.x/rest-helix/users-get.mdx",sourceDirName:"rest-helix",slug:"/rest-helix/users-get",permalink:"/rest-helix/users-get",draft:!1,editUrl:"https://github.com/twitch4j/twitch4j.github.io/tree/master/docs/versioned_docs/version-1.x/rest-helix/users-get.mdx",tags:[],version:"1.x",lastUpdatedBy:"Philipp Heuer",lastUpdatedAt:1660511578,formattedLastUpdatedAt:"Aug 14, 2022",sidebarPosition:60,frontMatter:{sidebar_position:60},sidebar:"version-1.x-docs",previous:{title:"Subscriptions - Check Subscription Status",permalink:"/rest-helix/subscriptions-byuser"},next:{title:"Users - Get Follows",permalink:"/rest-helix/users-followers"}},c={},p=[{value:"Description",id:"description",level:2},{value:"Method Definition",id:"method-definition",level:2},{value:"Code-Snippets",id:"code-snippets",level:2},{value:"print user list - search by id",id:"print-user-list---search-by-id",level:3},{value:"print user list - search by name",id:"print-user-list---search-by-name",level:3}],d={toc:p};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"users---get"},"Users - Get"),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"Gets information about one or more specified Twitch users. Users are identified by optional user IDs and/or login name. If neither a user ID nor a login name is specified, the user is looked up by Bearer token."),(0,a.kt)("h2",{id:"method-definition"},"Method Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@RequestLine("GET /users?id={id}&login={login}")\n@Headers("Authorization: Bearer {token}")\nHystrixCommand<UserList> getUsers(\n    @Param("token") String authToken,\n    @Param("id") List<Long> userIds,\n    @Param("login") List<String> userNames\n);\n')),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Required Parameters")),(0,a.kt)("p",null,"None"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Optional Parameters")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"right"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"authToken"),(0,a.kt)("td",{parentName:"tr",align:"center"},"string"),(0,a.kt)("td",{parentName:"tr",align:"right"},"Can be used if requesting information about your own account, to include the email")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"id"),(0,a.kt)("td",{parentName:"tr",align:"center"},"string"),(0,a.kt)("td",{parentName:"tr",align:"right"},"User ID. Multiple user IDs can be specified. Limit: ",(0,a.kt)("inlineCode",{parentName:"td"},"100"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"login"),(0,a.kt)("td",{parentName:"tr",align:"center"},"string"),(0,a.kt)("td",{parentName:"tr",align:"right"},"User login name. Multiple login names can be specified. Limit: ",(0,a.kt)("inlineCode",{parentName:"td"},"100"),".")))),(0,a.kt)("h2",{id:"code-snippets"},"Code-Snippets"),(0,a.kt)("h3",{id:"print-user-list---search-by-id"},"print user list - search by id"),(0,a.kt)(l.default,{groupId:"code",mdxType:"Tabs"},(0,a.kt)(s.default,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'UserList resultList = twitchClient.getHelix().getUsers(null, Arrays.asList("149223493"), null).execute();\nresultList.getUsers().forEach(user -> {\n    System.out.println(user);\n});\n'))),(0,a.kt)(s.default,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'val resultList = twitchClient.helix.getUsers(null, listOf("149223493"), null).execute()\nresultList.users.forEach { user ->\n    println(user)\n}\n'))),(0,a.kt)(s.default,{value:"groovy",label:"Groovy",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-groovy"},'def resultList = twitchClient.helix.getUsers(null, ["149223493"], null).execute()\nresultList.users.forEach { user ->\n    System.out.println user\n}\n')))),(0,a.kt)("h3",{id:"print-user-list---search-by-name"},"print user list - search by name"),(0,a.kt)(l.default,{groupId:"code",mdxType:"Tabs"},(0,a.kt)(s.default,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'UserList resultList = twitchClient.getHelix().getUsers(null, null, Arrays.asList("twitch4j")).execute();\nresultList.getUsers().forEach(user -> {\n    System.out.println(user);\n});\n'))),(0,a.kt)(s.default,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},'val resultList = twitchClient.helix.getUsers(null, null, listOf("twitch4j")).execute()\nresultList.users.forEach { user ->\n    println(user)\n}\n'))),(0,a.kt)(s.default,{value:"groovy",label:"Groovy",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-groovy"},'def resultList = twitchClient.helix.getUsers(null, null, ["twitch4j"]).execute()\nresultList.users.each { user ->\n    System.out.println user\n}\n')))))}m.isMDXComponent=!0}}]);