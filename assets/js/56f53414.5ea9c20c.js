"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1594],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3514:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:11},i="Code Documentation",s={unversionedId:"contribution/code-documentation",id:"version-1.x/contribution/code-documentation",title:"Code Documentation",description:"The code of the project should be annotated with javadoc, so that we can create a automatic html docuementation and give helpful hints to users.",source:"@site/versioned_docs/version-1.x/contribution/code-documentation.md",sourceDirName:"contribution",slug:"/contribution/code-documentation",permalink:"/contribution/code-documentation",draft:!1,editUrl:"https://github.com/twitch4j/twitch4j.github.io/tree/master/docs/versioned_docs/version-1.x/contribution/code-documentation.md",tags:[],version:"1.x",lastUpdatedBy:"Philipp Heuer",lastUpdatedAt:1660511578,formattedLastUpdatedAt:"Aug 14, 2022",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"version-1.x-docs",previous:{title:"Releases",permalink:"/contribution/release"},next:{title:"Documentation Website",permalink:"/contribution/documentation"}},l={},c=[{value:"Examples",id:"examples",level:2},{value:"Class",id:"class",level:3},{value:"Method",id:"method",level:3}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"code-documentation"},"Code Documentation"),(0,o.kt)("p",null,"The code of the project should be annotated with javadoc, so that we can create a automatic html docuementation and give helpful hints to users."),(0,o.kt)("p",null,"When writing javadoc comments please follow this guideline:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Punctuate every class and method description (sentence or phrase) with a period."),(0,o.kt)("li",{parentName:"ul"},"Starting with an action word, describe what each class and method does."),(0,o.kt)("li",{parentName:"ul"},"Avoid just restating the class or method name (e.g., Avoid updateLocalization(...) \u2192 Updates the localization OR @param key the key)."),(0,o.kt)("li",{parentName:"ul"},"Describe the most important details in the first sentence, because it is the only one shown in the class/method summary."),(0,o.kt)("li",{parentName:"ul"},"Include all relevant tags (@param, @return, etc) for each method; without them, the method Javadoc is incomplete."),(0,o.kt)("li",{parentName:"ul"},"Start a method description with Returns, if the method returns a value."),(0,o.kt)("li",{parentName:"ul"},"Don\u2019t explicitly refer to collections in descriptions (e.g., list of articles). Use, instead, the plural (e.g., the articles) or \u201call the\u201d (e.g., all the articles)."),(0,o.kt)("li",{parentName:"ul"},"When referring to another class, create a link by using {@link entity} (e.g., {@link TwitchClient}) "),(0,o.kt)("li",{parentName:"ul"},"Begin boolean parameter descriptions with whether."),(0,o.kt)("li",{parentName:"ul"},"Describe exceptions (e.g., @throws) in past tense.")),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"class"},"Class"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Short Descriptions\n * <p>\n * Detailed Description\n *\n * @author First Person\n * @author Second Person\n * @version %I%, %G%\n * @since {{<current_version>}}\n */\npublic class Example {}\n")),(0,o.kt)("h3",{id:"method"},"Method"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Returns a list of users who follow a specified channel, sorted by the date when they started following the channel (newest first, unless specified otherwise).\n * <p>\n * Requires Scope: none\n *\n * @param limit Maximum number of most-recent objects to return (users who started following the channel most recently). Default: 25. Maximum: none.\n * @param direction Direction of sorting. Valid values: asc (oldest first), desc (newest first). Default: desc.\n * @return Returns all followers.\n * @since {{<current_version>}}\n */\n Observable<Follower> getFollowers(int limit, Direction direction);\n")))}d.isMDXComponent=!0}}]);