"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9834],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(r),d=n,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||l;return r?a.createElement(f,o(o({ref:t},p),{},{components:r})):a.createElement(f,o({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var u=2;u<l;u++)o[u]=r[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},5162:(e,t,r)=>{r.r(t),r.d(t,{default:()=>o});var a=r(7294),n=r(6010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:r,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,n.Z)(l,o),hidden:r},t)}},5488:(e,t,r)=>{r.r(t),r.d(t,{default:()=>d});var a=r(7462),n=r(7294),l=r(6010),o=r(2389),i=r(7392),s=r(7094),u=r(2466);const p="tabList__CuJ",m="tabItem_LNqP";function c(e){var t,r;const{lazy:o,block:c,defaultValue:d,values:f,groupId:g,className:h}=e,b=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=f?f:b.map((e=>{let{props:{value:t,label:r,attributes:a}}=e;return{value:t,label:r,attributes:a}})),k=(0,i.l)(v,((e,t)=>e.value===t.value));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===d?d:null!=(t=null!=d?d:null==(r=b.find((e=>e.props.default)))?void 0:r.props.value)?t:b[0].props.value;if(null!==y&&!v.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+v.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:N,setTabGroupChoices:x}=(0,s.U)(),[T,w]=(0,n.useState)(y),O=[],{blockElementScrollPositionUntilNextRender:E}=(0,u.o5)();if(null!=g){const e=N[g];null!=e&&e!==T&&v.some((t=>t.value===e))&&w(e)}const j=e=>{const t=e.currentTarget,r=O.indexOf(t),a=v[r].value;a!==T&&(E(t),w(a),null!=g&&x(g,String(a)))},D=e=>{var t;let r=null;switch(e.key){case"ArrowRight":{var a;const t=O.indexOf(e.currentTarget)+1;r=null!=(a=O[t])?a:O[0];break}case"ArrowLeft":{var n;const t=O.indexOf(e.currentTarget)-1;r=null!=(n=O[t])?n:O[O.length-1];break}}null==(t=r)||t.focus()};return n.createElement("div",{className:(0,l.Z)("tabs-container",p)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":c},h)},v.map((e=>{let{value:t,label:r,attributes:o}=e;return n.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>O.push(e),onKeyDown:D,onFocus:j,onClick:j},o,{className:(0,l.Z)("tabs__item",m,null==o?void 0:o.className,{"tabs__item--active":T===t})}),null!=r?r:t)}))),o?(0,n.cloneElement)(b.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function d(e){const t=(0,o.Z)();return n.createElement(c,(0,a.Z)({key:String(t)},e))}},5132:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>u,toc:()=>m});var a=r(7462),n=(r(7294),r(3905)),l=r(5488),o=r(5162);const i={sidebar_position:41},s="Games - Top Games",u={unversionedId:"rest-helix/games-top",id:"version-1.x/rest-helix/games-top",title:"Games - Top Games",description:"Description",source:"@site/versioned_docs/version-1.x/rest-helix/games-top.mdx",sourceDirName:"rest-helix",slug:"/rest-helix/games-top",permalink:"/rest-helix/games-top",draft:!1,editUrl:"https://github.com/twitch4j/twitch4j.github.io/tree/master/docs/versioned_docs/version-1.x/rest-helix/games-top.mdx",tags:[],version:"1.x",lastUpdatedBy:"Philipp Heuer",lastUpdatedAt:1660511578,formattedLastUpdatedAt:"Aug 14, 2022",sidebarPosition:41,frontMatter:{sidebar_position:41},sidebar:"version-1.x-docs",previous:{title:"Games - Get",permalink:"/rest-helix/games-get"},next:{title:"Moderators - Get",permalink:"/rest-helix/moderators-get"}},p={},m=[{value:"Description",id:"description",level:2},{value:"Method Definition",id:"method-definition",level:2},{value:"Code-Snippets",id:"code-snippets",level:2},{value:"print game id and name for the top 10 games",id:"print-game-id-and-name-for-the-top-10-games",level:3}],c={toc:m};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"games---top-games"},"Games - Top Games"),(0,n.kt)("h2",{id:"description"},"Description"),(0,n.kt)("p",null,"Gets games sorted by number of current viewers on Twitch, most popular first."),(0,n.kt)("p",null,"The response has a JSON payload with a data field containing an array of games information elements and a pagination field containing information required to query for more streams."),(0,n.kt)("h2",{id:"method-definition"},"Method Definition"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'@RequestLine("GET /games/top?after={after}&before={before}&first={first}")\n@Headers("Authorization: Bearer {token}")\nHystrixCommand<GameTopList> getTopGames(\n    @Param("token") String authToken,\n    @Param("after") String after,\n    @Param("before") String before,\n    @Param("first") String first\n);\n')),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"Required Parameters")),(0,n.kt)("p",null,"None"),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"Optional Parameters")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Name"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"right"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"authToken"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"right"},"User Auth Token")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"after"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"right"},"Cursor for forward pagination: tells the server where to start fetching the next set of results, in a multi-page response. The cursor value specified here is from the pagination response field of a prior query.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"before"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"right"},"Cursor for backward pagination: tells the server where to start fetching the next set of results, in a multi-page response. The cursor value specified here is from the pagination response field of a prior query.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"first"),(0,n.kt)("td",{parentName:"tr",align:"center"},"string"),(0,n.kt)("td",{parentName:"tr",align:"right"},"Maximum number of objects to return. Maximum: 100. Default: 20.")))),(0,n.kt)("h2",{id:"code-snippets"},"Code-Snippets"),(0,n.kt)("h3",{id:"print-game-id-and-name-for-the-top-10-games"},"print game id and name for the top 10 games"),(0,n.kt)(l.default,{groupId:"code",mdxType:"Tabs"},(0,n.kt)(o.default,{value:"java",label:"Java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'GameTopList resultList = twitchClient.getHelix().getTopGames(null, null, 10).execute();\nresultList.getGames().forEach(game -> {\n    System.out.println("ID: " + game.getId() + " - " + game.getName());\n});\n'))),(0,n.kt)(o.default,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-kotlin"},'val resultList = twitchClient.helix.getTopGames(null, null, 10).execute()\nresultList.games.forEach { game ->\n    println("ID: ${game.id} - ${game.name}")\n}\n'))),(0,n.kt)(o.default,{value:"groovy",label:"Groovy",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-groovy"},'def resultList = twitchClient.helix.getTopGames(null, null, 10).execute()\nresultList.games.each { game ->\n    System.out.println "ID: ${game.id} - ${game.name}"\n}\n')))))}d.isMDXComponent=!0}}]);