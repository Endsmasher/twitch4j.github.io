"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6736],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),m=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=m(a),d=r,g=c["".concat(s,".").concat(d)]||c[d]||p[d]||l;return a?n.createElement(g,i(i({ref:t},u),{},{components:a})):n.createElement(g,i({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var m=2;m<l;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.r(t),a.d(t,{default:()=>i});var n=a(7294),r=a(6010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:a},t)}},5488:(e,t,a)=>{a.r(t),a.d(t,{default:()=>d});var n=a(7462),r=a(7294),l=a(6010),i=a(2389),o=a(7392),s=a(7094),m=a(2466);const u="tabList__CuJ",p="tabItem_LNqP";function c(e){var t,a;const{lazy:i,block:c,defaultValue:d,values:g,groupId:h,className:b}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=g?g:f.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),k=(0,o.l)(v,((e,t)=>e.value===t.value));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===d?d:null!=(t=null!=d?d:null==(a=f.find((e=>e.props.default)))?void 0:a.props.value)?t:f[0].props.value;if(null!==y&&!v.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+v.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:N,setTabGroupChoices:x}=(0,s.U)(),[w,T]=(0,r.useState)(y),O=[],{blockElementScrollPositionUntilNextRender:G}=(0,m.o5)();if(null!=h){const e=N[h];null!=e&&e!==w&&v.some((t=>t.value===e))&&T(e)}const E=e=>{const t=e.currentTarget,a=O.indexOf(t),n=v[a].value;n!==w&&(G(t),T(n),null!=h&&x(h,String(n)))},D=e=>{var t;let a=null;switch(e.key){case"Enter":E(e);break;case"ArrowRight":{var n;const t=O.indexOf(e.currentTarget)+1;a=null!=(n=O[t])?n:O[0];break}case"ArrowLeft":{var r;const t=O.indexOf(e.currentTarget)-1;a=null!=(r=O[t])?r:O[O.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":c},b)},v.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>O.push(e),onKeyDown:D,onClick:E},i,{className:(0,l.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":w===t})}),null!=a?a:t)}))),i?(0,r.cloneElement)(f.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function d(e){const t=(0,i.Z)();return r.createElement(c,(0,n.Z)({key:String(t)},e))}},9161:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>m,toc:()=>p});var n=a(7462),r=(a(7294),a(3905)),l=a(5488),i=a(5162);const o={sidebar_position:40},s="Games - Get",m={unversionedId:"rest-helix/games-get",id:"version-1.x/rest-helix/games-get",title:"Games - Get",description:"Description",source:"@site/versioned_docs/version-1.x/rest-helix/games-get.mdx",sourceDirName:"rest-helix",slug:"/rest-helix/games-get",permalink:"/rest-helix/games-get",draft:!1,editUrl:"https://github.com/twitch4j/twitch4j.github.io/tree/master/docs/versioned_docs/version-1.x/rest-helix/games-get.mdx",tags:[],version:"1.x",lastUpdatedBy:"Philipp Heuer",lastUpdatedAt:1660511578,formattedLastUpdatedAt:"Aug 14, 2022",sidebarPosition:40,frontMatter:{sidebar_position:40},sidebar:"version-1.x-docs",previous:{title:"Clips - Get",permalink:"/rest-helix/clips-get"},next:{title:"Games - Top Games",permalink:"/rest-helix/games-top"}},u={},p=[{value:"Description",id:"description",level:2},{value:"Method Definition",id:"method-definition",level:2},{value:"Code-Snippets",id:"code-snippets",level:2},{value:"print game name",id:"print-game-name",level:3}],c={toc:p};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"games---get"},"Games - Get"),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"Gets game information by game ID or name."),(0,r.kt)("p",null,"The response has a JSON payload with a data field containing an array of games elements."),(0,r.kt)("h2",{id:"method-definition"},"Method Definition"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'@RequestLine("GET /games?id={id}&name={name}")\n@Headers("Authorization: Bearer {token}")\nHystrixCommand<GameList> getGames(\n    @Param("token") String authToken,\n    @Param("id") List<Long> id,\n    @Param("name") List<String> name\n);\n')),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Required Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:"center"},"string"),(0,r.kt)("td",{parentName:"tr",align:"right"},"Game ID. At most 100 ",(0,r.kt)("inlineCode",{parentName:"td"},"id")," values can be specified")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:"center"},"string"),(0,r.kt)("td",{parentName:"tr",align:"right"},"Game name. The name must be an exact match. For instance, \u201cPokemon\u201d will not return a list of Pokemon games; instead, query the specific Pokemon game(s) in which you are interested. At most ",(0,r.kt)("inlineCode",{parentName:"td"},"100")," name values can be specified.")))),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Optional Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"authToken"),(0,r.kt)("td",{parentName:"tr",align:"center"},"string"),(0,r.kt)("td",{parentName:"tr",align:"right"},"User Auth Token")))),(0,r.kt)("h2",{id:"code-snippets"},"Code-Snippets"),(0,r.kt)("h3",{id:"print-game-name"},"print game name"),(0,r.kt)(l.default,{groupId:"code",mdxType:"Tabs"},(0,r.kt)(i.default,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'GameList resultList = twitchClient.getHelix().getGames(Arrays.asList(overwatchGameId), null).execute();\n\nresultList.getGames().forEach(game -> {\n    System.out.println("Game ID: " + game.getId() + " is " + game.getName());\n});\n'))),(0,r.kt)(i.default,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'val resultList = twitchClient.helix.getGames(listOf(overwatchGameId), null).execute()\n\nresultList.games.forEach { game ->\n    println("Game ID: ${game.id} is ${game.name}")\n}\n'))),(0,r.kt)(i.default,{value:"groovy",label:"Groovy",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},'def resultList = twitchClient.helix.getGames([overwatchGameId], null).execute()\n\nresultList.games.each { game ->\n    System.out.println "Game ID: ${game.id} is ${game.name}"\n}\n')))))}d.isMDXComponent=!0}}]);